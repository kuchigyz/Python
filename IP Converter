while True:
  ipString = input('IP Adress:   ')
  if ipString == '':
    continue
  elif ipString == 'exit' or ipString == 'quit':
    break  
  ipString = ipString.split('.')
  maskString = input('Subnet Mask: ')
  if maskString == '':
    continue
  elif maskString == 'exit' or maskString == 'quit':
    break  
  maskString = maskString.split('.')
  ip = [int(i) for i in ipString]
  mask = [int(i) for i in maskString]
  if ip[0] < 128:
    ipClass = 1
  elif ip[0] < 192:
    ipClass = 2  
  else:
    ipClass = 3

  #Number of Subnet Bits
  subnetBits = 0
  n = [int(i) for i in bin((1<<8)+mask[ipClass])[-8:]]
  for i in range(len(n)-1,-1,-1):
    if n[i] == 1:
        subnetBits = i
        break
  print('Subnets:    ', 2 ** subnetBits)

  #Number of Host Bits
  if ipClass == 1:
    hostBits = 3 * 8 - subnetBits
  if ipClass == 2:
    hostBits = 2 * 8 - subnetBits
  if ipClass == 3:
    hostBits = 8 - subnetBits
  print('Host Bits:  ', hostBits)
  
  #Number of possible Hosts
  print('Hosts:      ', 2 ** hostBits - 2)

  #Network Adress
  networkAdress = ip.copy()
  networkAdress[ipClass] = ip[ipClass] & mask[ipClass]
  if ipClass == 1: 
    networkAdress[ipClass + 1] = 0
    networkAdress[ipClass + 2] = 0
  if ipClass == 2:
    networkAdress[ipClass + 1] = 0

  #First Host Adress
  firstHostAdress = networkAdress.copy()
  firstHostAdress[3] += 1

  #Broadcast Adress
  broadcastAdress = networkAdress.copy()
  broadcastAdress[ipClass] = [int(d) for d in bin((1<<8)+broadcastAdress[ipClass])[-8:]]
  for i in range(subnetBits, 8):
    broadcastAdress[ipClass][i] = 1  
  broadcastAdress[ipClass] = int(''.join(map(str, broadcastAdress[ipClass])), 2)
  if ipClass == 1:
    broadcastAdress[2] = 255
    broadcastAdress[3] = 255
  if ipClass == 2:
    broadcastAdress[3] = 255  

  #Last Host Adress
  lastHostAdress = broadcastAdress.copy()
  lastHostAdress[3] -= 1
  a = [int(d) for d in bin((1<<8)+ip[ipClass])[-8:]]
  b = [int(d) for d in bin((1<<8)+mask[ipClass])[-8:]]
  c = [int(d) for d in bin((1<<8)+networkAdress[ipClass])[-8:]]
  #Print Adress
  networkAdress = '.'.join([str(i) for i in networkAdress]) 
  print('Network:    ', networkAdress)
  firstHostAdress = '.'.join([str(i) for i in firstHostAdress]) 
  print('First host: ', firstHostAdress)
  lastHostAdress = '.'.join([str(i) for i in lastHostAdress]) 
  print('Last host:  ', lastHostAdress)
  broadcastAdress = '.'.join([str(i) for i in broadcastAdress]) 
  print('Broadcast:  ', broadcastAdress)
  print('\n Bitwise Multiplication\n{}\n{}\n{}\n'.format(a, b, c))
